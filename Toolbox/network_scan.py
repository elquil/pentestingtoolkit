import subprocess
import re

def run_command(command):
    """Executes a system command and returns its output."""
    try:
        output = subprocess.check_output(command, shell=True, stderr=subprocess.STDOUT)
        return output.decode('utf-8')
    except subprocess.CalledProcessError as e:
        print(f"Error executing command: {e}")
        return ""

def main():
    target = input("Enter the target IP address or hostname: ")
    if not target:
        print("No target specified. Exiting.")
        return

    print(f"[+] Running Nmap service discovery on {target}")
    nmap_command = f"nmap -p- --open --min-rate=1000 -T4 {target} -oN nmap_results.txt"
    nmap_output = run_command(nmap_command)
    print(nmap_output)

    print("[+] Running Nikto web application scan on open ports")
    # Extracting open ports from the Nmap results
    try:
        with open('nmap_results.txt', 'r') as file:
            nmap_results = file.read()
        open_ports = ','.join(re.findall(r'^[0-9]+/open', nmap_results, re.MULTILINE))
        open_ports = open_ports.replace('/open', '')
    except IOError:
        print("Failed to read Nmap results. Exiting.")
        return
    
    if open_ports:
        nikto_command = f"nikto -host {target} -p {open_ports} -output nikto_results.txt"
        nikto_output = run_command(nikto_command)
        print(nikto_output)
    else:
        print("No open ports found. Exiting.")
        return

    print(f"[+] Finished advanced vulnerability scan for {target}")

if __name__ == "__main__":
    main()
