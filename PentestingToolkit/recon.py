import requests
from bs4 import BeautifulSoup
import whois
import re
import ipaddress

# Function to check if the input is an IP address
def is_ip_address(input_string):
    try:
        ipaddress.ip_address(input_string)
        return True
    except ValueError:
        return False

# Function to extract all links from a page
def extract_links(page, target_url):
    links = set()
    soup = BeautifulSoup(page, "html.parser")
    for link in soup.find_all("a"):
        href = link.get("href")
        if href and not href.startswith(target_url) and href.startswith("http"):
            links.add(href)
    return links

# Function to extract email addresses from a page
def extract_emails(page):
    emails = set(re.findall(r"\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b", page))
    return emails

# Function to extract forms from a page using BeautifulSoup
def extract_forms(page):
    soup = BeautifulSoup(page, "html.parser")
    forms = []
    for form in soup.find_all("form"):
        action = form.get("action")
        method = form.get("method", "get").lower()
        inputs = []
        for input_tag in form.find_all("input"):
            inputs.append({
                "name": input_tag.get("name"),
                "value": input_tag.get("value"),
                "type": input_tag.get("type")
            })
        forms.append({"action": action, "method": method, "inputs": inputs})
    return forms

# Function to extract technologies used by a page
def extract_technologies(page):
    technologies = {}
    soup = BeautifulSoup(page, "html.parser")
    for script in soup.find_all("script"):
        src = script.get("src", "")
        if "jquery" in src:
            technologies["jQuery"] = True
        if "angular" in src:
            technologies["Angular"] = True
    return technologies

# Function to perform reconnaissance
def recon(target):
    results = {"links": set(), "emails": set(), "forms": [], "technologies": {}, "whois": {}}
    is_ip = is_ip_address(target)
    try:
        # For IP addresses, the HTTP request part is skipped
        if not is_ip:
            response = requests.get(target)
            page_content = response.text
            results["links"] = extract_links(page_content, target)
            results["emails"] = extract_emails(page_content)
            results["forms"] = extract_forms(page_content)
            results["technologies"] = extract_technologies(page_content)
        results["whois"] = whois.whois(target)
    except requests.RequestException as e:
        print(f"Request failed: {e}")
    except Exception as e:
        print(f"An error occurred: {e}")
    return results

# Main execution logic
if __name__ == "__main__":
    target_input = input("Please enter the target URL or IP address: ")
    result = recon(target_input)
    if result:
        print("Links:")
        for link in result["links"]:
            print(link)
        print("\nEmails:")
        for email in result["emails"]:
            print(email)
        print("\nForms:")
        for form in result["forms"]:
            print(form)
        print("\nTechnologies:")
        for tech, exists in result["technologies"].items():
            print(f"{tech}: {exists}")
        print("\nWhois:")
        for key, value in result["whois"].items():
            print(f"{key}: {value}")
