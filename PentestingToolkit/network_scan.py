import scapy.all as scapy

def scan(ip):
    # Create an ARP request packet
    arp_request = scapy.ARP(pdst=ip)
    # Create the Ethernet frame to encapsulate the ARP request
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    # Combine the Ethernet frame and ARP request
    arp_request_broadcast = broadcast / arp_request
    # Send the packet and receive the response
    answered_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]

    # Create a list to store the scan results
    clients_list = []
    for element in answered_list:
        client_dict = {"ip": element[1].psrc, "mac": element[1].hwsrc}
        clients_list.append(client_dict)
    return clients_list

def print_result(results_list):
    print("IP Address\t\tMAC Address")
    print("-----------------------------------------")
    for client in results_list:
        print(client["ip"] + "\t\t" + client["mac"])

def main():
    print("Network Scanner")
    target = input("Enter target IP address or IP range: ")
    
    # Validate the target to ensure it does not contain a port number
    if ':' in target:
        print("[-] Please do not include a port number with the IP address.")
        return
    
    if not target.strip():
        print("[-] You must specify a target IP address or IP range.")
        return
    
    scanned_result = scan(target)
    print_result(scanned_result)

if __name__ == "__main__":
    main()
